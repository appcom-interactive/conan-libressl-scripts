
# C++ project
language: cpp

# Only build master and tags
if: branch = master OR tag IS present

git:
    submodules: true

env:
  global:
    - BINTRAY_USER=manromen
    # BINTRAY_KEY
    - secure: "P7HDgODK833q8hBEcS43pnydf8ex0XYpa1FtWlqb02zIgqziJEVm/SuGQz89ksPjMgjz2XgqaeFBoVD/V59GRt6pvh8m7E4UoMU22Y2rzKJoCOQIHTlTvTYWJZzD0wpB+HAwSNz1XAiqSXHLlwtPsCzvviFOIiKSLnfVbUuP1Ad2Q2ZFGcgMWFFSWjoZNHcVUeMn4YZc8AZUtsZWWymwo7I7qnVEuF/zsl5KAbphkCSAm1Umsnd2W3S0VfAJIJZAh9YfP2vt3YqNEW/ghyP38YIcCV9RR1wpOQR1mNfMU2W2wuEFEUPsJBOs1TNxTWsW8XKEI24PbnJ/B+wQAlbXTaqSORUVSEGZkOguWq6HtPlSc1EvphHKbkhnWeO6HO29oAPc6omS2SxYPbxWVselpYWQi4dn0dxtnQY1XcSCCh4TIUfCIhI+U/qNDPxsDKRaQ9FoPdTvh3LSSjRmmrOG3oeXHaQxrE7t3/O0Al//Q0jiASTeVI2Wy+ds0a/cruNCswgOwVDopGyBVQT5vd8XArzi3CzzDqZqWoNwm6RnxldTGFYcdnhk68G8ks2srxIwnruAe/NHuG5sbMCf3EZ/riW11D7qEb4BRFLIJtRpfxQZdN4jQMrPd5sL3DqkI8S4oJDS9pJ0gNPCpOvaCyNO0jwdFRPniPbVzEWUhaj7ZTw="
    - CONAN_REPOSITORY=https://api.bintray.com/conan/manromen/rgpaul
    - CONAN_REPOSITORY_NAME=rgpaul
    - CONAN_USER=rgpaul
    - CONAN_CHANNEL=stable
    - LIBRARY_VERSION=2.9.2

### before installing deps
before_install:
  # Download Android NDK from Google
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TARGET_PLATFORM" == "android" ]]; then
      curl -sSOL "https://dl.google.com/android/repository/android-ndk-${TRAVIS_ANDROID_NDK_VERSION}-linux-x86_64.zip";
      unzip -q -o android-ndk-${TRAVIS_ANDROID_NDK_VERSION}-linux-x86_64.zip;
      export ANDROID_NDK_PATH=${TRAVIS_BUILD_DIR}/android-ndk-${TRAVIS_ANDROID_NDK_VERSION};
    fi

### install deps
install:

  # Install conan (windows)
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      choco install python3;
      choco install conan;
    fi

  # Install conan (linux)
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      pip install conan --user;
    fi

  # Install conan (macos)
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      pip3 install conan;
    fi

  # Add conan repository and apply conan config
  - conan remote add ${CONAN_REPOSITORY_NAME} ${CONAN_REPOSITORY}
  - conan config install ${TRAVIS_BUILD_DIR}/.travis/conan/config.zip

  # login to conan
  - conan user -p "$BINTRAY_KEY" -r ${CONAN_REPOSITORY_NAME} ${BINTRAY_USER}

### build script
script:
  # show OS/compiler version
  - uname -a

  # make sure CXX is correctly set
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi

  # Android Builds
  - if [ "$TARGET_PLATFORM" == "android" ]; then
      conan create . libressl/${LIBRARY_VERSION}@${CONAN_USER}/${CONAN_CHANNEL} -s os=Android -s os.api_level=${TRAVIS_ANDROID_API_LEVEL} -s compiler=${TRAVIS_ANDROID_COMPILER} -s compiler.version=${TRAVIS_ANDROID_COMPILER_VERSION} -s compiler.libcxx=${TRAVIS_ANDROID_COMPILER_LIBCXX} -s build_type=${TARGET_BUILD_TYPE} -o android_ndk=${TRAVIS_ANDROID_NDK_VERSION} -o android_stl_type=${TRAVIS_ANDROID_STL_TYPE} -s arch=${TRAVIS_ANDROID_ARCH} -o shared=False;
    fi

  # macOS Builds
  - if [ "$TARGET_PLATFORM" == "macos" ]; then
      export MACOS_SDK_VERSION=$(xcodebuild -showsdks | grep macosx | awk '{print $4}' | sed 's/[^0-9,\.]*//g');
      echo "macOS SDK ${MACOS_SDK_VERSION}";
      conan create . libressl/${LIBRARY_VERSION}@${CONAN_USER}/${CONAN_CHANNEL} -s os=Macos -s os.version=${MACOS_SDK_VERSION} -s arch=${TARGET_ARCH} -s build_type=${TARGET_BUILD_TYPE} -o shared=False;
    fi

  # iOS Builds
  - if [ "$TARGET_PLATFORM" == "ios" ]; then
      export IOS_SDK_VERSION=$(xcodebuild -showsdks | grep iphoneos | awk '{print $4}' | sed 's/[^0-9,\.]*//g');
      echo "iOS SDK ${IOS_SDK_VERSION}";
      
      conan create . libressl/${LIBRARY_VERSION}@${CONAN_USER}/${CONAN_CHANNEL} -s os=iOS -s os.version=${IOS_SDK_VERSION} -s arch=${TARGET_ARCH} -s build_type=${TARGET_BUILD_TYPE} -o shared=False;
    fi

  # Windows Builds
  - if [ "$TARGET_PLATFORM" == "windows" ]; then
      conan create . libressl/${LIBRARY_VERSION}@${CONAN_USER}/${CONAN_CHANNEL} -s os=Windows -s compiler="Visual Studio" -s compiler.runtime=MT -s arch=${TARGET_ARCH} -s build_type=${TARGET_BUILD_TYPE} -o shared=False;
    fi

deploy:
  provider: script
  script: bash .travis/conan-deploy.sh
  on:
    tags: true
    all_branches: true

### build matrix
matrix:
  include:

    # iOS - Release
    - os: osx
      osx_image: xcode10.3
      compiler: clang
      env:
        - TARGET_PLATFORM=ios
        - TARGET_ARCH=armv8
        - TARGET_BUILD_TYPE=Release

    # iOS - Debug
    - os: osx
      osx_image: xcode10.3
      compiler: clang
      env:
        - TARGET_PLATFORM=ios
        - TARGET_ARCH=armv8
        - TARGET_BUILD_TYPE=Debug

    # iOS - Simulator
    - os: osx
      osx_image: xcode10.3
      compiler: clang
      env:
        - TARGET_PLATFORM=ios
        - TARGET_ARCH=x86_64
        - TARGET_BUILD_TYPE=Debug

    # macOS - Release
    - os: osx
      osx_image: xcode10.3
      compiler: clang
      env:
        - TARGET_PLATFORM=macos
        - TARGET_ARCH=x86_64
        - TARGET_BUILD_TYPE=Release

    # macOS - Debug
    - os: osx
      osx_image: xcode10.3
      compiler: clang
      env:
        - TARGET_PLATFORM=macos
        - TARGET_ARCH=x86_64
        - TARGET_BUILD_TYPE=Debug

    ### Android NDK r20 - arm64-v8a ###
    - os: linux
      dist: xenial # Ubuntu 16.04 (Xenial)
      env:
        - TARGET_PLATFORM=android
        - TRAVIS_ANDROID_NDK_VERSION=r20
        - TRAVIS_ANDROID_COMPILER=clang
        - TRAVIS_ANDROID_COMPILER_VERSION=8.0
        - TRAVIS_ANDROID_ARCH=armv8
        - TRAVIS_ANDROID_API_LEVEL=21
        - TRAVIS_ANDROID_COMPILER_LIBCXX=libc++
        - TRAVIS_ANDROID_STL_TYPE=c++_static
        - TARGET_BUILD_TYPE=Release
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5' ]

    ### Android NDK r20 - armeabi-v7a ###
    - os: linux
      dist: xenial # Ubuntu 16.04 (Xenial)
      env:
        - TARGET_PLATFORM=android
        - TRAVIS_ANDROID_NDK_VERSION=r20
        - TRAVIS_ANDROID_COMPILER=clang
        - TRAVIS_ANDROID_COMPILER_VERSION=8.0
        - TRAVIS_ANDROID_ARCH=armv7
        - TRAVIS_ANDROID_API_LEVEL=19
        - TRAVIS_ANDROID_COMPILER_LIBCXX=libc++
        - TRAVIS_ANDROID_STL_TYPE=c++_static
        - TARGET_BUILD_TYPE=Release
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5' ]

    ### Android NDK r20 - x86 ###
    - os: linux
      dist: xenial # Ubuntu 16.04 (Xenial)
      env:
        - TARGET_PLATFORM=android
        - TRAVIS_ANDROID_NDK_VERSION=r20
        - TRAVIS_ANDROID_COMPILER=clang
        - TRAVIS_ANDROID_COMPILER_VERSION=8.0
        - TRAVIS_ANDROID_ARCH=x86
        - TRAVIS_ANDROID_API_LEVEL=19
        - TRAVIS_ANDROID_COMPILER_LIBCXX=libc++
        - TRAVIS_ANDROID_STL_TYPE=c++_static
        - TARGET_BUILD_TYPE=Release
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5' ]

    ### Android NDK r20 - x86_64 ###
    - os: linux
      dist: xenial # Ubuntu 16.04 (Xenial)
      env:
        - TARGET_PLATFORM=android
        - TRAVIS_ANDROID_NDK_VERSION=r20
        - TRAVIS_ANDROID_COMPILER=clang
        - TRAVIS_ANDROID_COMPILER_VERSION=8.0
        - TRAVIS_ANDROID_ARCH=x86_64
        - TRAVIS_ANDROID_API_LEVEL=21
        - TRAVIS_ANDROID_COMPILER_LIBCXX=libc++
        - TRAVIS_ANDROID_STL_TYPE=c++_static
        - TARGET_BUILD_TYPE=Release
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-5' ]

    # Windows - Debug
    # - os: windows
    #   language: cpp
      # TODO: remove filter_secrets - for now we have to disable it due to the following issue:
      # https://travis-ci.community/t/current-known-issues-please-read-this-before-posting-a-new-topic/264/10
      # filter_secrets: false
      # env: 
        ## - TRAVIS_OS_NAME=windows
        ## - PATH=/c/Python37:/c/Python37/Scripts:$PATH
        # - PATH=c:\python37:c:\python37\Scripts:$PATH
        # - TARGET_PLATFORM=windows
        # - TARGET_ARCH=x86_64
        # - TARGET_BUILD_TYPE=Debug
